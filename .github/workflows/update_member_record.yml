name: update_member_record
on:
  pull_request_target:
    types: [opened]
    paths:
    - 'static/admin/userdata/member_record.yml'

jobs:
  job_verify_identity:
    name: verify_identity
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.idverified.outputs.idverified }}
    steps:
      - name: review event details
        run: |
          env
          cat /home/runner/work/_temp/_github_workflow/event.json
      - name: install yq
        run: sudo snap install yq
      - name: curl member record file
        run: |
          curl -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          "https://raw.githubusercontent.com/modernapsninjas/${{ github.event.repository.name }}/main/staticuserdata/member_record.yml" \
          -o /tmp/member_record.yml
          cat /tmp/member_record.yml | yq '.memberGithubLogin' >> /tmp/member_record_login
          echo member_record_login=$(cat /tmp/member_record_login) >> $GITHUB_ENV
      - name: verify that github account that opened pull request is the same as member record file being updated
        run: |
          echo ${{ env.member_record_login }}
          if [ "${{ env.member_record_login }}" = "${{ github.event.sender.login }}" ]
          then
            echo idverified=true >> $GITHUB_ENV
            echo "the requesting member is correctly updating their own record"
          else
            echo idverified=false >> $GITHUB_ENV
            echo "the requesting user account is not the owner of this record"
          fi
      - id: idverified
        if: env.idverified == 'true'
        run: echo "::set-output name=idverified::true"
      - name: if not verified, post message to pr
        if: env.idverified == 'false'
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"event": "COMMENT", "body": "@'${{ github.event.sender.login }}' You must be logged in to Github with the same username as the memberGithubLogin as the member record file you are attempting to update. Please login as the member if you would like to update the member record. This PR will now be closed."}' \
          "https://api.github.com/repos/${{ env.org_repo }}/pulls/${{ github.event.number }}/reviews" \
          -o /tmp/pr_comment_post_response.json
          cat /tmp/pr_comment_post_response.json
      - name: if not verified, close pr
        if: env.ismember == 'false'
        run: |
          curl -X PATCH \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"state": "closed"}' \
          "https://api.github.com/repos/${{ env.org_repo }}/pulls/${{ github.event.number }}" \
          -o /tmp/close_pr_response.json
          cat /tmp/close_pr_response.json
  job_update_member_record:
    name: update_member_record_job
    needs: job_verify_identity
    runs-on: ubuntu-latest
    if: needs.job_verify_identity.outputs.idverified == 'true'
    steps:
      - name: review event details
        run: |
          env
          cat /home/runner/work/_temp/_github_workflow/event.json
      - name: install yq
        run: sudo snap install yq
      - name: set org/repo as org_repo
        run: |
          echo $(echo org_repo="$GITHUB_REPOSITORY") >> $GITHUB_ENV
          org_repo="$GITHUB_REPOSITORY"
          echo $org_repo
      - name: curl file list for pr
        run: |
          curl -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          "https://api.github.com/repos/${{ env.org_repo }}/pulls/${{ github.event.number }}/files" \
          -o /tmp/pr_file_list.json
      - name: set envar pr_filename as filename value
        run: |
          cat /tmp/pr_file_list.json | jq -r '.filename' > /tmp/pr_filename
          echo pr_filename=$(cat /tmp/pr_filename) >> $GITHUB_ENV
      - name: set envar test_name as filename with extension removed
        run: |
          echo test_name=$(echo ${{ env.pr_filename }} | sed 's/\..*//g') >> $GITHUB_ENV
      - name: set raw link to pr file as envar pr_raw_file_url
        run: |
          cat /tmp/pr_file_list.json | jq -r '.raw_url' > /tmp/pr_raw_file_url
          echo pr_raw_file_url=$(cat /tmp/pr_raw_file_url) >> $GITHUB_ENV
      - name: curl the pr file
        run: |
          curl -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          "${{ env.pr_raw_file_url }}" \
          -o /tmp/pr_raw_file.yml
      - name: update member record metafields
        run: |
          sed -i '/^memberGithubId/c\memberGithubId: "'${{ github.event.sender.id }}'"' /tmp/pr_raw_file.yml
          sed -i '/^memberGithubLogin/c\memberGithubLogin: "'${{ github.event.sender.login }}'"' /tmp/pr_raw_file.yml
      - name: push new member record to admin-private/registrations
        run: |
          curl -X PUT \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"message": "Updating Member Record File For ${{ github.event.issue.user.login }}", "content": "'$(cat /tmp/pr_raw_file.yml | base64 -w 0)'"}' \
          "https://api.github.com/repos/modernappsninja/admin-private/contents/userdata/members/${{ github.event.issue.user.login }}_${{ github.event.issue.user.id }}.yml" \
          -o /tmp/member_record_post_response.json
          cat /tmp/member_record_post_response.json
      - name: post message to pr
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"event": "COMMENT", "body": "@'${{ github.event.sender.login }}' your member record file has been updated. You can see the updated file at [https://modernappsninjas/'${{ github.event.sender.login }}'/userdata/member_record.yml](https://modernappsninjas/'${{ github.event.sender.login }}'/userdata/member_record.yml). This PR will now be closed."}' \
          "https://api.github.com/repos/${{ env.org_repo }}/pulls/${{ github.event.number }}/reviews" \
          -o /tmp/pr_comment_post_response.json
          cat /tmp/pr_comment_post_response.json
      - name: merge pull request
        run: |
          curl -X PUT \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"commit_title": "Course Registration for ${{ github.event.sender.login }}"}'                                                        \
          "https://api.github.com/repos/${{ env.org_repo }}/pulls/${{ github.event.number }}/merge" \
          -o /tmp/merge_pr_response.json
          cat /tmp/merge_pr_response.json
      - name: close pr
        run: |
          curl -X PATCH \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"state": "closed"}' \
          "https://api.github.com/repos/${{ env.org_repo }}/pulls/${{ github.event.number }}" \
          -o /tmp/close_pr_response.json
          cat /tmp/close_pr_response.json